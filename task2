#complex numbers
a=2+3j
b=6+9j
print(type(a))

print(a+b)
print(a-b)
print(a*b)
print(a/b)
print(a**b)
print(a//b) #It shows TypeError: unsupported operand type(s) for //: 'complex' and 'complex'
print(a%b)  #unsupported operand type(s) for %: 'complex' and 'complex'


#booleans- true or false
#assignment operator
a = 567
print(a== 765)
print(a==567)
print(int(false))
print(int(True))

# db_user_password = "1234"
# user_password_input ="1234"
# print(db_user_password==user_password_input)
# print("login succesfull")

sequence-strings,list,tuple,range
# list syntax- list_new = [] 
# list - list is collection of data items and can be mutable(we can add ,delete, insert)
# list is slower in iteration compared to tuple
list = [2,3,4,"string",True, [1,2,3]]
print(list)
print(list[2])
print(len(list))
print(len(list[5]))
print([5])
print(list[-2])
print(list[1:3:2])
# print(list[6])
list = [2,3,4,"string",False, [1,"hi",3]]
print(list[5][1])
print(list[-2])

list[5][1] = "Good bye"
print(list)
list = [2,3,4,"string",False, ["hello"]]
print(list[5])

print(list[5]) o/p [1,"hi",3]
temp_var = list[5]
print(temp_var)   #(or)
print(list[5[1]])




#tuple -  tuple is a collection of data items and it is  immutable
tuple =(1,2,3,4,5,[a,b,c],"hello")
print(tuple)
print(id(tuple)) # for memory address
print(type(tuple))
print(len(tuple))
print(tuple[3])
print(tuple[-3])


range- limit 
print(list(range(0,100))) #to change range into list
print(list(range(0,100,3))) 
print(list(range(100,1,-1))) #negative indexing


